name: Build Release

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ "master" ]
    paths-ignore:
      - '.github/**'
      - '*.yaml'
      - '*.txt'
      - '*.md'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (defaults to "Nightly")'
        required: false
        default: 'Nightly'
      publish-release:
        description: Publish Release?
        type: boolean
        default: true
      release-body:
        description: Release body
        required: false
        default: 'Latest nightly of QuickLootIE. These builds are untested and may contain bugs.'
      spriggit_tool_version:
        description: Spriggit version (optional)
        required: false

jobs:
  check-changes:
    name: Check for recent changes
    if: ${{ github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
      - name: Check for changes in the last 24 hours
        id: should_run
        run: |
          CHANGED_FILES=$(git log --since="1 days ago" --name-only | grep -v ".\((md|txt)\)$")
          echo "::set-output name=should_run::$(wc -l <<<"$CHANGED_FILES")"

  build:
    name: Build and Compile
    needs: check-changes
    if: ${{ needs.check-changes.outputs.should_run >= 1 || github.event_name == 'workflow_dispatch' && always() }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        if: matrix.os == 'ubuntu-latest'
        run: mkdir -p ${{ github.workspace }}/to-pack

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .github/deps
          key: ${{ runner.os }}-deps

      - name: Fetch and extract dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [[ "${{ matrix.os }}" == 'ubuntu-latest' ]]; then
            gh release download -O .github/spriggit.zip -p 'SpriggitLinuxCLI.zip' -R Mutagen-Modding/Spriggit ${{ inputs.spriggit_tool_version }}
            7z x .github/spriggit.zip -o.github/spriggit
            chmod +x .github/spriggit/Spriggit.CLI
          else
            gh release download -O .github/Caprica.7z -p '*.7z' -R Orvid/Caprica v0.3.0
            7z x .github/Caprica.7z -o.github/Caprica
          fi

      - name: Build and run tool
        run: |
          if [[ "${{ matrix.os }}" == 'ubuntu-latest' ]]; then
            .github/spriggit/Spriggit.CLI deserialize --InputPath "Papyrus/Source/ESP" --OutputPath "${{ github.workspace }}/to-pack/QuickLootIE.esp"
          else
            .github/Caprica/Caprica.exe --game skyrim --import ".github/Papyrus/SRC;.github/Papyrus/SRC_SKYUI;.github/Papyrus/SRC_PAPUTIL;" --output "Scripts" --flags=".github/Papyrus/SRC/TESV_Papyrus_Flags.flg" "${{ github.workspace }}/Papyrus/Source/Scripts" -R -q
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os == 'ubuntu-latest' && 'plugin' || 'compiled-scripts' }}
          path: ${{ github.workspace }}/to-pack

  package-mod:
    name: Package all necessary files
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: plugin
          path: to-pack/plugin

      - name: Create packing structure
        run: |
          mkdir -p "${{ github.workspace }}/to-pack/Source/Scripts"
          mkdir -p "${{ github.workspace }}/to-pack/SKSE/Plugins"
          mkdir -p "${{ github.workspace }}/to-pack/Interface"
          mkdir -p "${{ github.workspace }}/to-pack/Scripts"
          cp -a "Papyrus/Source/Scripts/." "${{ github.workspace }}/to-pack/Source/Scripts"
          cp -a "QuickLootIE.esp" "${{ github.workspace }}/to-pack/QuickLootIE.esp"
          cp -a "Papyrus/Interface/." "${{ github.workspace }}/to-pack/Interface"
          cp -a "swf/bin/." "${{ github.workspace }}/to-pack/Interface"
          cp -a "SKSE/." "${{ github.workspace }}/to-pack/SKSE/Plugins"
          cp -a "Scripts/." "${{ github.workspace }}/to-pack/Scripts"

      - name: Zip release files
        uses: vimtor/action-zip@v1.2
        with:
          files: to-pack/.
          dest: QuickLootIE-${{ inputs.version || 'nightly' }}.zip

      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: QuickLootIE-${{ inputs.version || 'nightly' }}
          path: QuickLootIE-${{ inputs.version || 'nightly' }}.zip

      - name: Remove temporary artifacts
        uses: geekyeggo/delete-artifact@v4
        with:
          name: |
            plugin
            compiled-scripts

  share-release:
    name: Share release
    needs: package-mod
    if: ${{ inputs.publish-release == true && (needs.check-changes.outputs.should_run >= 1 || github.event_name == 'workflow_dispatch' && always()) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: QuickLootIE-${{ inputs.version || 'nightly' }}

      - name: Delete existing release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          github_token: ${{ github.token }}
          tag_name: ${{ inputs.version || 'nightly' }}
          delete_release: true

      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          name: ${{ inputs.version || 'nightly' }}
          body: '${{ inputs.release-body }}'
          tag: ${{ inputs.version || 'nightly' }}
          prerelease: true
          artifacts: QuickLootIE-${{ inputs.version || 'nightly' }}.zip

      - name: Remove temporary artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: QuickLootIE-${{ inputs.version || 'nightly' }}
